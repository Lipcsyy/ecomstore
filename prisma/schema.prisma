// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  hashedPassword String
  emailVerified  DateTime?
  isNewUser      Boolean   @default(true)
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts       Account[]
  sessions       Session[]

  Profile Profile?
  orders         Order[]
}

model Profile {
  id             String    @id @default(cuid())
  user           User      @relation(fields: [userId], references: [id])
  userId         String    @unique

  @@index([userId])
}


model Order {
  id          String    @id @default(cuid())
  userId      String
  userEmail   String
  address     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // New relation for many-to-many relationship with products
  orderProducts OrderProduct[]
  user         User      @relation(fields: [userId], references: [id])
}

model Product {
  id       String    @id @default(cuid())
  name     String
  color    String
  quantity Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // New relation for many-to-many relationship with orders
  orderProducts OrderProduct[]
}

model OrderProduct {
  id       String    @id @default(cuid())
  orderId  String
  productId String
  quantity Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  order    Order     @relation(fields: [orderId], references: [id])
  product  Product   @relation(fields: [productId], references: [id])
}
